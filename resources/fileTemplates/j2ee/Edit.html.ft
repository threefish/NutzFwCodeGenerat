<%
var title="#[base.funName]编辑";
layout("/layouts/blank.html",{title:title}){
%>
<style type="text/css">
    .title-lable {
        height: 35px;
    }

    .required {
        color: red;
        position: absolute;
        top: 3px;
        font-size: 18px;
        left: 0px;
    }
    .edui-editor-bottomContainer{
        display: none;
    }
    .edui-default .edui-editor-toolbarboxinner {
        background: #fff;
    }


    .input-group-addon-right-icon {
        height: 34px;
        width: 40px;
    }
    .box-tips {
        text-align: left;
        background: #fff;
        font-size: 12px;
        padding: 10px 5px;
        line-height: 20px;
        color: #77b0e2;
    }
     <##if(base.multiDict){##>
    .tree {
        width: calc(100% - 40px) !important;
    }
    .width100{
        width: 100% !important;
    }
     <##}##>
</style>
<section class="content" id="container" v-if="initLoad">
    <div role="form">
        <!-- text input -->
        <## for(field in fields){ ##>
         <## if(field.dict){ ##>
        <div class="form-group col-xs-6">
            <label>#[field.comment]</label>
            <##if(field.multiDict){##>
            <div class="input-group" style="width: 100%;">
                ${dict("#[field.dictCode]",true,'v-model=fromData.#[field.name]','class="tree width100"',':disabled="!fromDataEdit"','placeholder="#[field.placeholder]"')}
            </div>
            <##}else{##>
                ${dict("#[field.dictCode]",false,'v-model=fromData.#[field.name]','class="form-control"',':disabled="!fromDataEdit"','placeholder="#[field.placeholder]"')}
            <##}##>
        </div>
        <##}else if(field.date){##>
        <div class="form-group col-xs-6">
            <label>#[field.comment]</label>
            <div class="input-group">
                <input type="text" v-model="fromData.#[field.name]" data-fieldname="#[field.name]"
                       date-fomat="yyyy-MM-dd" date-type="date" readonly :disabled="!fromDataEdit"
                       class="form-control"
                       placeholder="#[field.placeholder]">
                <span class="input-group-addon"><i class="fa fa-clock-o"></i></span>
            </div>
        </div>
        <##}else if(field.attachment){##>
        <!-- 附件类型 -->
        <div class="form-group clearfix" style="width: 100%">
            <label class="col-sm-4 control-label">
                <##if(!field.required){##>
                <span class="required">*</span>
                <##}##>
                #[field.comment]
            </label>
            <div class="col-sm-8">
                <div class="form-control" style="border: none;">
                    <div class="layui-btn layui-btn-xs layui-btn-normal"
                         @click="handleAddAttach('#[field.name]',#[field.attachmentMultiple],#[field.attachmentAllIsImg],'#[field.attachSuffix]')">
                        添加
                    </div>
                    <div class="layui-btn layui-btn-xs layui-btn-normal"
                         @click="handleViewAttach('#[field.name]')">查看({{(fromData.#[field.name]+"").fileCount() }})
                    </div>
                </div>
            </div>
        </div>
        <##}else if(field.text==3){##>
        <!-- 多行文本框 -->
        <div class="form-group clearfix" style="width: 100%">
            <label class="col-sm-12 control-label">
                <##if(!field.required){##>
                <span class="required">*</span>
                <##}##>
                #[field.comment]
            </label>
        </div>
        <div class="form-group clearfix" style="width: 100%">
            <div class="col-sm-12" style="min-height: 70px">
                                 <textarea maxlength="#[field.maxLength]" rows="2" v-model="fromData.#[field.name]" class="form-control"
                                           title="#[field.placeholder]"
                                           style="resize: vertical;min-height: 60px"></textarea>
                <div class="box-tips">填写提示：#[field.placeholder]</div>
            </div>
        </div>
        <##}else if(field.text==4){##>
        <!-- 富文本框 百度UE -->
        <div class="form-group clearfix" style="width: 100%">
            <label class="col-sm-12 control-label">
                <##if(!field.required){##>
                <span class="required">*</span>
                <##}##>
                #[field.comment]
            </label>
        </div>
        <div class="form-group clearfix" style="width: 100%">
            <div class="col-sm-12" style="min-height: 300px">
                                <textarea ueditor="true" maxlength="#[field.maxLength]" v-model="fromData.#[field.name]" id="#[field.name]"
                                          data-fieldname="details"></textarea>
                <div class="box-tips">填写提示：#[field.placeholder]</div>
            </div>
        </div>
        <##}else if(field.oneOne){##>
        <!-- 单表关联 -->
        <div class="form-group col-xs-6">
            <label>#[field.comment]</label>
            <div id="#[field.name]" class="form-control"></div>
        </div>
        <##}else if(!field.primaryKey){##>
        <div class="form-group col-xs-6">
            <label>
            <##if(!field.required){##>
            <span class="required">*</span>
            <##}##>
            #[field.comment]
            </label>
            <input type="text" v-model="fromData.#[field.name]" :disabled="!fromDataEdit" class="form-control"
                   placeholder="#[field.placeholder]" maxlength="#[field.maxLength]">
        </div>
        <##}##>
        <##}##>
    </div>
</section>
<##if(base.attachment){##>
<script type="text/javascript">
    //计算附件个数
    String.prototype.fileCount = function () {
        var arr = this.split(',');
        var count = 0;
        for (var i in arr) {
            var str = arr[i];
            if (str != undefined && arr != "" && arr != null && arr != "null" && arr.length != 0) {
                count++;
            }
        }
        return count;
    }
</script>
<##}##>
<##if(base.oneOneRelation){##>
<link rel="stylesheet" href="${base!}/static/plugins/tinyselect/tinyselect.css?_=${productVersion}">
<script src="${base!}/static/plugins/tinyselect/tinyselect.js?_=${productVersion}"></script>
<##}##>
<##if(base.richText){##>
<script type="text/javascript" charset="utf-8"
        src="${base}/static/plugins/ueditor/ueditor.config.js?_=${productVersion}"></script>
<script type="text/javascript" charset="utf-8"
        src="${base}/static/plugins/ueditor/ueditor.all.js?_=${productVersion}"></script>
<script type="text/javascript" charset="utf-8"
        src="${base}/static/plugins/ueditor/lang/zh-cn/zh-cn.js?_=${productVersion}"></script>
<##}##>
<script type="text/javascript">
    <##if(base.richText){##>
    var ue = new Object();
    var readOnly = "${data.fromDataEdit}" == "true";
    <##}##>
   var vm = new Vue({
        el: '#container',
        data: {
            fromData: {
                <## for(field in fields){ ##>
                <## if(field.primaryKey){ ##>
                #[field.name]: '${data.#[field.name]!}',
                <##}else{##>
                #[field.name]: '',
                <##}}##>
            },
            fromDataSubmit: false,
            <##if(base.richText){##>
            fromDataEdit: readOnly,
            <##}else{##>
            fromDataEdit: "${data.fromDataEdit}" == "true",
            <##}##>
            initLoad: false,
        },
        methods: {
            init: function () {
                this.initLoad = true;
                if (this.fromData.#[base.primaryKey] != '') {
                    $.post(base + "/#[base.entityName]/details", {#[base.primaryKey]: this.fromData.#[base.primaryKey]}, function (json) {
                        vm.fromData = json.data;
                    });
                }
            },
        <##if(base.attachment){##>
            handleAddAttach: function (fieldName, isMultiAttach, isImage, attachSuffix) {
                core.handleAddAttach(fieldName, isMultiAttach, isImage, attachSuffix);
            },
            handleViewAttach:function (fieldName) {
                core.showAttachList(this.fromData[fieldName]);
            },
        <##}##>
        <##if(base.multiDict){##>
            reverEnumDesc: function (fieldName, sysCode) {
                return core.postJSON("/sysDict/getDictName", {sysCode: sysCode, ids: this.fromData[fieldName]});
            },
            dictChange: function (fieldId, dictValFieldName) {
                //字典变化，需要修改依赖值的内容
                core.dictChange(fieldId, dictValFieldName, this)
            },
            handleShowEnumTree: function (fieldName, sysCode, multipleDict) {
                core.handleShowEnumTree(fieldName, sysCode, multipleDict, this);
            },
        <##}##>
        },
        created: function () {
            this.init();
        },
        updated: function () {
        },
        mounted: function () {
            layui.use(['laydate'], function () {
                laydate = layui.laydate;
                $("[date-fomat]").each(function () {
                    var fieldname = $(this).attr("data-fieldname");
                    var format = $(this).attr("date-fomat");
                    var type = $(this).attr("date-type");
                    var elstr = $(this).attr("el");
                    var el = $(this)[0];
                    if (elstr != undefined) {
                        el = $(elstr)[0];
                    }
                    laydate.render({
                        elem: el,
                        type: type,
                        format: format,
                        done: function (value) {
                            vm.fromData[fieldname] = value;
                        }
                    });
                });
            });
            <##if(base.richText){##>
            $("[ueditor]").each(function () {
                var fieldname = $(this).attr("data-fieldname");
                ue[fieldname] = new UE.ui.Editor({
                    toolbars: [['undo', 'redo', 'bold', 'indent', 'italic', 'underline', 'strikethrough', 'blockquote', 'pasteplain', 'selectall', 'horizontal', 'removeformat', 'unlink', 'cleardoc', 'fontfamily', 'fontsize', 'paragraph', 'edittable', 'edittd', 'link', 'justifyleft', 'justifyright', 'justifycenter', 'justifyjustify', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'fullscreen', 'directionalityltr', 'directionalityrtl', 'pagebreak', 'imagecenter', 'lineheight', 'inserttable', 'preview']],
                    allHtmlEnabled: false,
                    autoHeightEnabled: false,
                    autoFloatEnabled: false,
                    elementPathEnabled: false,
                    initialFrameHeight: 200,
                    enableAutoSave: false,
                    initialFrameWidth: '100%',
                    readonly: !readOnly
                });
                ue[fieldname].render(fieldname);
                ue[fieldname].addListener('contentChange', function () {
                    vm.fromData[fieldname] = ue[fieldname].getContent();
                })
            });
            <##}##>
         <##if(base.oneOneRelation){##>
        <##for(field in fields){##>
        <##if(field.oneOne){##>
            tinyselect('##[field.name]', {
                ajax: {
                    url: '${base!}/#[base.entityName]/relation#[field.oneOneClassName]',
                    type: 'POST',
                    key: "key",
                },
            }).on("select", function (e) {
                vm.fromData.#[field.oneOneField]=e.data.id;
                vm.fromData.#[field.name]=e.data.text;
            });
        <##}}}##>
        }
    });
</script>
<%}%>
